{"version":3,"file":"forest.interfaces.js","sourceRoot":"/","sources":["forest.interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { ModuleMetadata, Type } from '@nestjs/common/interfaces';\n\nimport { AgentOptions } from '@forestadmin/agent';\n\nexport type ForestModuleOptions = {\n    datasources?: any[];\n} & AgentOptions;\n\nexport interface ForestOptionsFactory {\n    createForestModuleOptions(): Promise<ForestModuleOptions> | ForestModuleOptions;\n}\n\nexport interface ForestModuleAsyncOptions extends Pick<ModuleMetadata, 'imports'> {\n    inject?: any[];\n    useClass?: Type<ForestOptionsFactory>;\n    useExisting?: Type<ForestOptionsFactory>;\n    useFactory?: (...args: any[]) => Promise<ForestModuleOptions> | ForestModuleOptions;\n}\n"]}